****The get_drink_request interface returns drink requests made by poeple in the same city where the current user is******
--this interface is not supposed to return drink requests made by the current user himself, implying that user be able to get drink requests
--made by other people in their area without showing thier own drink request as part of the list


**inputs to the interface**
This interface won't recieve a Jason object,
instead a query parameter in the form "city=Manhattan&seed_id=drink_request_id" will be sent


Params Description and Purpose

1. city -> this query parameter value should help pull drink request posted by people in the same area as current user
        -> eg. city = New York

2. seed_id -> when client reaches out to get drink requests, the max number acceptable should be only 10 drink requests
           -> this requirement helps improve the server side performance
           -> the seed_id value represents the drink request id for the last item in the list of previously requested
              10 drink requests.
           -> with this parameter, for example "seed_id = 200", the server knows to query for drink requests whose id's 
              are less than 200 eg(199 to 190) as the information are ordered in descending order.

3. it is also important to note that only future drink requests may be returned. Date and Time may not be request parameters
   but server should be able to query for drink requests whose dates are greater than or equal to the current date.
   and if there's any drink request on the current date, then it's time must be greater than the current time.


**Expected Json Objects from server***
*if success
    [
        {
            "request_id": 24,
            "request_purpose": "Drink",
            "rest_location": "1913 Bronxdale Ave, The Bronx",
            "rest_name": "F&J Pine",
            "rest_rating": 5,
            "rest_photo": "photo url from google which was save in database when drink request was created",
            "rest_category_icon": "icon url of restaurant which was save in database when drink request was created",
            "rest_service_types": "restuaring list of services type which was save in database when drink request was made",
            "meeting_date": "09/04/2020",
            "meeting_time": "14:00",
            "meeting_budget": "$5.00",
            "added_message": "This is a place holder text for message to be added on for the drink request",
            "requestee_id": "id of person who made this drink request",
            "requestee_propic": "Base64 encoded image from probably Blob image data stored in database",
            "requestee_coverphoto": "always return null value for now"
            "requestee_name": "Filomina",
            "requestee_gender": "female",
            "requestee_age": 25,
            "requestee_address": "1913 Bronxdale Ave, The Bronx"
        },
        {
            "request_id": 24,
            "request_purpose": "Drink",
            "rest_location": "1913 Bronxdale Ave, The Bronx",
            "rest_name": "F&J Pine",
            "rest_rating": 5,
            "rest_photo": "photo url from google which was save in database when drink request was created",
            "rest_category_icon": "icon url of restaurant which was save in database when drink request was created",
            "rest_service_types": "restuaring list of services type which was save in database when drink request was made",
            "meeting_date": "09/04/2020",
            "meeting_time": "14:00",
            "meeting_budget": "$5.00",
            "added_message": "This is a place holder text for message to be added on for the drink request",
            "requestee_id": "id of person who made this drink request",
            "requestee_propic": "Base64 encoded image from probably Blob image data stored in database",
            "requestee_coverphoto": "always return null value for now"
            "requestee_name": "Filomina",
            "requestee_gender": "female",
            "requestee_age": 25,
            "requestee_address": "1913 Bronxdale Ave, The Bronx"
        }
    ]

*if failed*
    {
        "status": "fail",
        "msg": "error message"
    }